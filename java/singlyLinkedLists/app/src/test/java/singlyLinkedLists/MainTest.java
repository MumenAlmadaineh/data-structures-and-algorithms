/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package singlyLinkedLists;

import org.junit.jupiter.api.Test;

import java.util.Arrays;

import static org.junit.jupiter.api.Assertions.*;

class MainTest {
    @Test void instantiateAnEmptyLinkedList(){
        LinkedList testLinkedList = new LinkedList();
        assertEquals("NULL", testLinkedList.toString());
    }

    @Test void testInsertIntoLinkedList(){
        LinkedList linkedList = new LinkedList();
        linkedList.insert(3);
        assertEquals("{ 3 } -> NULL",linkedList.toString());
    }

    @Test void testHeadPointToFirstNode(){
        LinkedList linkedList = new LinkedList();
        linkedList.insert(3);
        linkedList.insert(7);
        linkedList.insert(9);
        linkedList.insert(11);
        linkedList.insert(13);
        assertEquals(13,linkedList.head.value);
    }

    @Test void insertMultipleNodesIntoLinkedList(){
        LinkedList linkedList = new LinkedList();
        linkedList.insert(3);
        linkedList.insert(7);
        linkedList.insert(9);
        linkedList.insert(11);
        linkedList.insert(13);
        assertEquals("{ 13 } -> { 11 } -> { 9 } -> { 7 } -> { 3 } -> NULL", linkedList.toString());
    }

    @Test void isReturnTrueWhenValueIsExists(){
        LinkedList linkedList = new LinkedList();
        linkedList.insert(3);
        linkedList.insert(7);
        linkedList.insert(9);
        linkedList.insert(11);
        linkedList.insert(13);
        assertEquals(true,linkedList.includes(13));
        System.out.println(linkedList.head.next.value);
    }

    @Test void isReturnFalseWhenValueIsExists(){
        LinkedList linkedList = new LinkedList();
        linkedList.insert(3);
        linkedList.insert(7);
        linkedList.insert(9);
        linkedList.insert(11);
        linkedList.insert(13);
        assertEquals(false,linkedList.includes(12));
    }

//    @Test void isReturnCollectionOfAllValues(){
//        LinkedList linkedList = new LinkedList();
//    }
}
